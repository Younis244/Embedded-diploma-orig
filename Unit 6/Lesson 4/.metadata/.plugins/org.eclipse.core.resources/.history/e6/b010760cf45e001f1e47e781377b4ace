/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
#warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

typedef volatile unsigned int vuint32_t;
#include <stdint.h>
//register address
//RCC
#define RCC_BASE 	0x40021000
#define RCC_ABP2ENR *(volatile uint32_t *) (RCC_BASE   + 0x18)
#define RCC_IOPAEN (1<<2)

//GPIO
#define GPIOA_BASE  0x40010800
#define GPIOA_CRH 	*(volatile uint32_t *) (GPIOA_BASE + 0x04)
#define GPIOA_ODR 	*(volatile uint32_t *) (GPIOA_BASE + 0x0C)
#define GPIOA_CRL 	*(volatile uint32_t *) (GPIOA_BASE + 0x00)
#define GPIOA13	   	(1UL<<13)


//EXTI
#define EXTI_BASE 	0x40010400
#define EXTI_IMR 	*(volatile uint32_t *)(EXTI_BASE + 0x00)
#define EXTI_RTSR 	*(volatile uint32_t *)(EXTI_BASE + 0x08)
#define EXTI_PR 	*(volatile uint32_t *)(EXTI_BASE + 0x14)

//AFIO
#define AFIO_BASE 	0x40010000
#define AFIO_EXTICR1 *(volatile uint32_t *)(AFIO_BASE + 0x08)

#define NVIC_EXTI0 	*(volatile uint32_t *)(0xE000E100)

void clock_init()
{
	RCC_ABP2ENR |=RCC_IOPAEN; //Keda 3mlna enable lel clock ely d5lla lel RCC

	//	Bit 0 AFIOEN: Alternate function I/O clock enable
	//	Set and cleared by software.
	//	0: Alternate Function I/O clock disabled
	//	1:Alternate Function I/O clock enabled
	RCC_ABP2ENR |= (1<<0);
}

void GPIO_init()
{
	GPIOA_CRH 	&=0xFF0FFFFF; //Ana keda sfrrt el pins been 20 w 24 (20-->23)
	GPIOA_CRH 	|=0x00200000; //Ana ba3d ma sfrt.hom 3awez a7ott 3alehom 2 ba2a
	//Tab leh ma7tetsh mn el awal?
	//Allk la ma efred kan ma7toott fe el pins 1's so ama ont ha3mell OR ma3 2 fa kan el result hateb2a 1111 wana 3awezha 0010

	//PIN A 0 input floating 01: Floating input (reset state)
	GPIOA_CRL |= (1<<2);
}

int main(void)
{
	//EXTIx[3:0]: EXTI x configuration (x= 0 to 3) to PORTA 0
	AFIO_EXTICR1 = 0;

	//Enable EXTI line 0 (Mask 1)
	EXTI_IMR |= (1<<0);

	//Enable rising trigger
	EXTI_RTSR |= (1<<0);

	//Enable NVIC IRQ6 EXTI0 --->>Dah bara specs el stm32f103xx 3ashan dah mn el cortex family
	NVIC_EXTI0 |= (1<<6);

	while(1);

}

void EXTI0_IRQHandler ()
{
	//IRQ is happened EXTI0>>>PORTA Pin 0 _|- rising edge
	//toggle led Pin A 13
	GPIOA_ODR ^= (1<<13);

	//Clear pending request for line 0
	EXTI_PR |= (1<<0);
}















