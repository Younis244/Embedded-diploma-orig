/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */



#include <stdint.h>
//register address

#define RCC_BASE 	0x40021000
#define PORTA_BASE  0x40010800

#define RCC_ABP2ENR *(volatile uint32_t *) (RCC_BASE + 0x18)
#define GPIOA_CRH 	*(volatile uint32_t *) (PORTA_BASE + 0x04)
#define GPIOA_ODR 	*(volatile uint32_t *) (PORTA_BASE + 0x0C)


int main(void)
{
	RCC_ABP2ENR |=1<<2; //Keda 3mlna enable lel clock ely d5lla lel RCC
	GPIOA_CRH &=0xff0fffff; //Ana keda sfrrt el pins been 20 w 24 (20-->23)
	GPIOA_CRH |=0x00200000; //Ana ba3d ma sfrt.hom 3awez a7ott 3alehom 2 ba2a
							//Tab leh ma7tetsh mn el awal?
							//Allk la ma efred kan ma7toott fe el pins 1's so ama ont ha3mell OR ma3 2 fa kan el result hateb2a 1111 wana 3awezha 0010
	while(1)
	{
		GPIOA_ODR |=1<<13; //Set bit 13
		for(int i=0;i<50000;i++);
		GPIOA_ODR &=~(1<<13); //Clear bit 13
		for(int i=0;i<50000;i++);
	}


    return 0;
}
